{"version":3,"sources":["Prescription/Table.js","Header.js","Prescription/Footer.js","Print/Print.js","api/api.js","Prescription/Prescription.js","Prescriber/Prescriber.js","Verify/Verify.js","App.js","index.js"],"names":["PrescriptionTable","prescriptionList","setPrescriptionList","print","Prescription","validity","id","medicineName","dose","timeOfConsumption","this","isVisible","useState","prescription","setPrescription","editID","setEditID","handleChange","e","target","name","value","Grid","container","item","xs","md","align","TextField","label","onChange","Button","variant","onClick","newPrescription","length","document","getElementsByName","focus","style","marginTop","TableContainer","component","Paper","Table","TableHead","TableRow","TableCell","TableBody","map","toEdit","editPrescription","Header","date","patientName","setPatientName","setValidity","paddingLeft","paddingTop","getDate","getMonth","getFullYear","type","marginLeft","Footer","prescriberEmail","setPrescriberEmail","prescriberPassword","setPrescriberPassword","OTP","setOTP","getOTP","checkOTP","OTPVerified","printPrescription","showOTPField","setShowOTPField","spacing","marginBottom","Print","prescriberName","useEffect","qrcode","toCanvas","getElementById","error","console","log","toString","paddingRight","className","window","URL","signUp","credentials","axios","post","savePrescription","verifyPrescription","Date","setPrescriberName","setOTPVerified","prescriptionID","setPrescriptionID","showPrint","setShowPrint","a","email","password","then","result","status","alert","data","catch","response","otp","save","inputStyle","width","buttonStyle","Prescriber","setCredentials","authenticate","margin","Verify","VALID","setStatus","prescriptionDetails","setPrescriptionDetails","useParams","verify","contains","App","path","ReactDOM","render"],"mappings":"sYAyGeA,EArGW,SAAC,GAAgE,IAA9DC,EAA6D,EAA7DA,iBAAkBC,EAA2C,EAA3CA,oBAAqBC,EAAsB,EAAtBA,MAE5DC,GAFkF,EAAfC,SAGvE,WAAYC,EAAIC,EAAcC,EAAMC,GAAoB,oBACtDC,KAAKJ,GAAKA,EACVI,KAAKH,aAAeA,EACpBG,KAAKF,KAAOA,EACZE,KAAKD,kBAAoBA,EACzBC,KAAKC,WAAY,IAGrB,EAAwCC,mBAAS,CAC/CL,aAAc,GACdC,KAAM,GACNC,kBAAmB,GACnBE,WAAW,IAJb,mBAAOE,EAAP,KAAqBC,EAArB,KAMA,EAA4BF,oBAAU,GAAtC,mBAAOG,EAAP,KAAeC,EAAf,KAEMC,EAAe,SAACC,GACpBJ,EAAgB,2BAAID,GAAL,kBAAoBK,EAAEC,OAAOC,KAAOF,EAAEC,OAAOE,UAmC9D,OACE,eAACC,EAAA,EAAD,CAAMC,WAAS,EAAf,WACMpB,GAAS,cAACmB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,MAAM,SAAhC,SACT,cAACC,EAAA,EAAD,CAAWC,MAAM,gBAAgBT,KAAK,eAAeC,MAAOR,EAAaN,aAAcuB,SAAUb,OAEjGd,GAAS,cAACmB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,MAAM,SAAhC,SACT,cAACC,EAAA,EAAD,CAAWC,MAAM,OAAOT,KAAK,OAAOC,MAAOR,EAAaL,KAAMsB,SAAUb,OAExEd,GAAS,cAACmB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,MAAM,SAAhC,SACT,cAACC,EAAA,EAAD,CAAWC,MAAM,sBAAsBT,KAAK,oBAAoBC,MAAOR,EAAaJ,kBAAmBqB,SAAUb,OAEjHd,GAAS,cAACmB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,MAAM,SAAhC,SACT,cAACI,EAAA,EAAD,CAAQC,QAAQ,YAAYC,QA5CX,WACvB,IAAe,IAAZlB,EACDd,EAAiBc,GAAQR,aAAeM,EAAaN,aACrDN,EAAiBc,GAAQP,KAAOK,EAAaL,KAC7CP,EAAiBc,GAAQN,kBAAoBI,EAAaJ,kBAC1DO,GAAW,OAER,CACH,IAAMkB,EAAkB,IAAI9B,EAC5B8B,EAAgB3B,aAAeM,EAAaN,aAC5C2B,EAAgB1B,KAAOK,EAAaL,KACpC0B,EAAgBzB,kBAAoBI,EAAaJ,kBACjDyB,EAAgB5B,GAAKL,EAAiBkC,OACtCD,EAAgBvB,WAAY,EAC5BT,EAAoB,GAAD,mBAAKD,GAAL,CAAuBiC,KAC1CE,SAASC,kBAAkB,gBAAgB,GAAGC,QAEhDxB,EAAgB,CACdP,aAAc,GACdC,KAAM,GACNC,kBAAmB,GACnBE,WAAW,KAuBP,UAAoE,IAAZI,EAAgB,MAAQ,WAEpF,cAACO,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIE,MAAM,SAASY,MAAO,CAACC,UAAW,QAArD,SACE,cAAClB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIE,MAAM,SAAzB,SACA,cAACc,EAAA,EAAD,CAAgBC,UAAWC,IAA3B,SACI,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAWpB,MAAM,SAAjB,qBACA,cAACoB,EAAA,EAAD,CAAWpB,MAAM,SAAjB,2BACA,cAACoB,EAAA,EAAD,CAAWpB,MAAM,SAAjB,kBACA,cAACoB,EAAA,EAAD,CAAWpB,MAAM,SAAjB,kCACExB,GAAS,cAAC4C,EAAA,EAAD,CAAWpB,MAAM,SAAjB,uBAGf,cAACqB,EAAA,EAAD,UACG/C,EAAiBgD,KAAI,SAAApC,GAAY,OAChC,eAACiC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAWpB,MAAM,SAAjB,SAA2Bd,EAAaP,GAAG,IAC3C,cAACyC,EAAA,EAAD,CAAWpB,MAAM,SAAjB,SAA2Bd,EAAaN,eACxC,cAACwC,EAAA,EAAD,CAAWpB,MAAM,SAAjB,SAA2Bd,EAAaL,OACxC,cAACuC,EAAA,EAAD,CAAWpB,MAAM,SAAjB,SAA2Bd,EAAaJ,qBACtCN,GAAS,cAAC4C,EAAA,EAAD,CAAWpB,MAAM,SAAjB,SAA0B,cAACI,EAAA,EAAD,CAAQE,QAAS,kBAzC/C,SAAC3B,GACxB,IAAM4C,EAASjD,EAAiBK,GAChCQ,EAAgBoC,GAChBlC,EAAUV,GAsCkE6C,CAAiBtC,EAAaP,KAArD,sBALxBO,EAAaP,sBCjE/B8C,EAnBA,SAAC,GAAkE,IAAhEC,EAA+D,EAA/DA,KAAMC,EAAyD,EAAzDA,YAAaC,EAA4C,EAA5CA,eAAgBlD,EAA4B,EAA5BA,SAAUmD,EAAkB,EAAlBA,YAG7D,OACE,eAAClC,EAAA,EAAD,CAAMC,WAAS,EAAf,UACE,cAACD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIc,MAAO,CAACkB,YAAa,MAAOC,WAAY,MAA3D,SACE,uCAAUL,EAAKM,UAAf,IALS,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OAKrDN,EAAKO,YAAvC,IAAqDP,EAAKQ,mBAE5D,cAACvC,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGa,MAAO,CAACC,UAAW,OAAQiB,YAAa,OAAlE,SACE,cAAC7B,EAAA,EAAD,CAAWR,KAAK,cAAcS,MAAM,eAAeR,MAAOiC,EAAaxB,SAAU,SAACZ,GAAD,OAAOqC,EAAerC,EAAEC,OAAOE,YAElH,eAACC,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGa,MAAO,CAACC,UAAW,QAA7C,wBAEE,uBAAOsB,KAAK,OAAOvB,MAAO,CAACwB,WAAY,QAAS1C,MAAOhB,EAAUyB,SAAU,SAACZ,GAAD,OAAOsC,EAAYtC,EAAEC,OAAOE,iBCahG2C,EA3BA,SAAC,GAAuJ,IAArJC,EAAoJ,EAApJA,gBAAiBC,EAAmI,EAAnIA,mBAAoBC,EAA+G,EAA/GA,mBAAoBC,EAA2F,EAA3FA,sBAAuBC,EAAoE,EAApEA,IAAKC,EAA+D,EAA/DA,OAAQC,EAAuD,EAAvDA,OAAQC,EAA+C,EAA/CA,SAAUC,EAAqC,EAArCA,YAAaC,EAAwB,EAAxBA,kBAC5I,EAAwC9D,oBAAS,GAAjD,mBAAO+D,EAAP,KAAqBC,EAArB,KAEA,OACE,eAACtD,EAAA,EAAD,CAAMC,WAAS,EAACsD,QAAS,EAAzB,UACE,cAACvD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIE,MAAM,SAAzB,SACE,cAACC,EAAA,EAAD,CAAWR,KAAK,QAAQS,MAAM,mBAAmBiC,KAAK,QAAQzC,MAAO4C,EAAiBnC,SAAU,SAACZ,GAAD,OAAOgD,EAAmBhD,EAAEC,OAAOE,YAErI,cAACC,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIE,MAAM,SAAzB,SACE,cAACC,EAAA,EAAD,CAAWR,KAAK,WAAWS,MAAM,sBAAsBiC,KAAK,WAAWzC,MAAO8C,EAAoBrC,SAAU,SAACZ,GAAD,OAAOkD,EAAsBlD,EAAEC,OAAOE,YAEpJ,cAACC,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIE,MAAM,SAAzB,SACE,cAACI,EAAA,EAAD,CAAQE,QAAS,WAAQsC,IAAUK,GAAgB,IAAnD,uBAEDD,GAAgB,cAACrD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIE,MAAM,SAASY,MAAO,CAACuC,aAAc,QAAxD,SACf,cAAClD,EAAA,EAAD,CAAWR,KAAK,MAAMS,MAAM,MAAMR,MAAOgD,EAAKvC,SAAU,SAACZ,GAAD,OAAOoD,EAAOpD,EAAEC,OAAOE,YAEhFsD,GAAgB,cAACrD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIE,MAAM,SAASY,MAAO,CAACuC,aAAc,QAAxD,SACf,cAAC/C,EAAA,EAAD,CAAQE,QAASuC,EAAjB,qBAEDC,GAAe,cAACnD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIE,MAAM,SAAzB,SACd,cAACI,EAAA,EAAD,CAAQE,QAASyC,EAAjB,yB,iBCcOK,G,OAhCD,SAAC,GAAiE,IAA/DzE,EAA8D,EAA9DA,GAAI+C,EAA0D,EAA1DA,KAAMC,EAAoD,EAApDA,YAAa0B,EAAuC,EAAvCA,eAAgB/E,EAAuB,EAAvBA,iBAUtD,OATAgF,qBAAU,WACRC,IAAOC,SAAS/C,SAASgD,eAAe,UAAxC,yEAAqH9E,IAAM,SAAS+E,GAC/HA,GACDC,QAAQC,IAAIF,QAGf,CAAC/E,IAIF,eAACgB,EAAA,EAAD,CAAMC,WAAS,EAACsD,QAAS,EAAzB,UACE,eAACvD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,MAAM,OAAOY,MAAO,CAACkB,YAAa,MAAOC,WAAY,QAA/E,mBACSL,EAAKmC,WAAW,uBAAM,uBAD/B,iBAEiBlC,EAAY,uBAF7B,oBAGoB0B,KAEpB,cAAC1D,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,MAAM,QAAQY,MAAO,CAACkD,aAAc,KAAM/B,WAAY,QAAhF,SACE,wBAAQpD,GAAG,aAEb,cAACgB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,KAEf,cAACH,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIE,MAAM,SAAzB,SACE,cAAC,EAAD,CAAmB1B,iBAAkBA,EAAkBE,OAAO,MAEhE,cAACmB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIE,MAAM,SAAS+D,UAAU,WAA5C,SACE,cAAC3D,EAAA,EAAD,CAAQC,QAAQ,YAAYC,QAAS,kBAAM0D,OAAOxF,SAAlD,0B,iBC9BFyF,EAAG,8CAKIC,EAAS,SAACC,GAAD,OAAiBC,IAAMC,KAAN,UAAcJ,EAAd,WAA4BE,IAGtDG,EAAmB,SAAC5C,EAAMC,EAAaW,EAAiBhE,EAAkBI,GAAvD,OAAoE0F,IAAMC,KAAN,UAAcJ,EAAd,qBAAsC,CAACvC,KAAMA,EAAMC,YAAaA,EAAaW,gBAAiBA,EAAiBhE,iBAAkBA,EAAkBI,SAAUA,KACpP6F,EAAqB,SAAC5F,GAAD,OAAQyF,IAAMC,KAAN,UAAcJ,EAAd,uBAAwC,CAACtF,QCoFpEF,EAxFM,WAEnB,MAAiBQ,mBAAS,IAAIuF,MAAvB9C,EAAP,oBACA,EAAsCzC,mBAAS,IAA/C,mBAAO0C,EAAP,KAAoBC,EAApB,KACA,EAAgD3C,mBAAS,IAAzD,mBAAOX,EAAP,KAAyBC,EAAzB,KACA,EAA8CU,mBAAS,IAAvD,mBAAOqD,EAAP,KAAwBC,EAAxB,KACA,EAA4CtD,mBAAS,IAArD,mBAAOoE,EAAP,KAAuBoB,EAAvB,KACA,EAAoDxF,mBAAS,IAA7D,mBAAOuD,EAAP,KAA2BC,EAA3B,KACA,EAAgCxD,mBAAS,IAAzC,mBAAOP,EAAP,KAAiBmD,EAAjB,KACA,EAAsB5C,mBAAS,IAA/B,mBAAOyD,EAAP,KAAYC,EAAZ,KACA,EAAsC1D,oBAAS,GAA/C,mBAAO6D,EAAP,KAAoB4B,EAApB,KACA,EAA4CzF,mBAAS,IAArD,mBAAO0F,EAAP,KAAuBC,EAAvB,KACA,EAAkC3F,oBAAS,GAA3C,mBAAO4F,EAAP,KAAkBC,EAAlB,KAEMlC,GAAM,uCAAG,sBAAAmC,EAAA,uEDbMC,ECcF1C,EDdS2C,ECcQzC,EDdK4B,IAAMC,KAAN,UAAcJ,EAAd,WAA4B,CAACe,MAAOA,EAAOC,SAAUA,KCe3FC,MAAK,SAAAC,GACiB,MAAlBA,EAAOC,QACRC,MAAM,gCACNZ,EAAkBU,EAAOG,KAAKjC,iBAG9BgC,MAAM,0BAGTE,OAAM,SAAA7B,GACLC,QAAQC,IAAIF,EAAM8B,SAASJ,WAZhB,iCDbK,IAACJ,EAAOC,ICab,OAAH,qDAgBNpC,GAAQ,uCAAG,sBAAAkC,EAAA,uED5BOC,EC6BN1C,ED7BamD,EC6BI/C,ED7BI0B,IAAMC,KAAN,UAAcJ,EAAd,cAA+B,CAACe,MAAOA,EAAOS,IAAKA,KC8BvFP,MAAK,SAAAC,GACiB,MAAlBA,EAAOC,SACRV,GAAe,GACfD,EAAkBU,EAAOG,KAAK7F,MAC9B4F,MAAM,qBAGTE,OAAM,SAAA7B,GACwB,MAA1BA,EAAM8B,SAASJ,QAChBC,MAAM,6BAXK,iCD5BM,IAACL,EAAOS,IC4Bd,OAAH,qDAgBR1C,GAAiB,uCAAG,sBAAAgC,EAAA,sEAClBW,EAAKhE,EAAMC,EAAaW,EAAiBhE,EAAkBI,GAChEwG,MAAK,SAAAC,GACJxB,QAAQC,IAAIuB,GACZP,EAAkBO,EAAOG,KAAK3G,IAC9BmG,GAAa,MAEdS,OAAM,SAAA7B,GACLC,QAAQC,IAAIF,EAAM8B,aARI,2CAAH,qDAavB,OAAO,sCACHX,GAAa,gCAAK,cAAC,EAAD,CAAQnD,KAAMA,EAAMC,YAAaA,EAAaC,eAAgBA,EAAgBlD,SAAUA,EAAUmD,YAAaA,IACnI,uBACA,uBACA,cAAC,EAAD,CAAmBvD,iBAAkBA,EAAkBC,oBAAqBA,IAC5E,uBACA,uBACA,uBACA,cAAC,EAAD,CACA+D,gBAAiBA,EACjBC,mBAAoBA,EACpBC,mBAAoBA,EACpBC,sBAAuBA,EACvBC,IAAKA,EACLC,OAAQA,EACRC,OAAQA,GACRC,SAAUA,GACVC,YAAaA,EACbC,kBAAmBA,QAClB8B,GACD,cAAC,EAAD,CACAlG,GAAIgG,EACJjD,KAAMA,EACNC,YAAaA,EACb0B,eAAgBA,EAChB/E,iBAAkBA,QCvFhBqH,EAAa,CACjB9E,UAAW,OACX+E,MAAO,SAGHC,EAAc,CAClBhF,UAAW,QA6CEiF,EA1CI,WACjB,MAAsC7G,mBAAS,CAC7CQ,KAAM,GACNuF,MAAO,GACPC,SAAU,KAHZ,mBAAOd,EAAP,KAAoB4B,EAApB,KAMMzG,EAAe,SAACC,GACpBwG,EAAe,2BAAI5B,GAAL,kBAAmB5E,EAAEC,OAAOC,KAAOF,EAAEC,OAAOE,UAEtDsG,EAAY,uCAAG,sBAAAjB,EAAA,6DACnBpB,QAAQC,IAAIO,GADO,SAEbD,EAAOC,GACZe,MAAK,SAAAC,GACiB,MAAlBA,EAAOC,QACRC,MAAM,iDAGTE,OAAM,SAAA7B,GAAK,OAAIC,QAAQC,IAAIF,EAAM8B,aARf,2CAAH,qDAWlB,OACE,eAAC7F,EAAA,EAAD,CAAMC,WAAS,EAAf,UACE,cAACD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIE,MAAM,SAASY,MAAO,CAACqF,OAAQ,YAAlD,SACE,0CAEF,cAACtG,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIE,MAAM,SAAzB,SACE,cAACC,EAAA,EAAD,CAAWI,QAAQ,SAASZ,KAAK,OAAOS,MAAM,OAAOU,MAAO+E,EAAYjG,MAAOyE,EAAY1E,KAAMU,SAAUb,MAE7G,cAACK,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIE,MAAM,SAAzB,SACE,cAACC,EAAA,EAAD,CAAWI,QAAQ,SAASZ,KAAK,QAAQS,MAAM,QAAQU,MAAO+E,EAAYjG,MAAOyE,EAAYa,MAAO7E,SAAUb,MAEhH,cAACK,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIE,MAAM,SAAzB,SACE,cAACC,EAAA,EAAD,CAAWI,QAAQ,SAASZ,KAAK,WAAWC,MAAOyE,EAAYc,SAAU/E,MAAM,WAAWiC,KAAK,WAAWvB,MAAO+E,EAAYxF,SAAUb,MAEzI,cAACK,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIE,MAAM,SAAzB,SACE,cAACI,EAAA,EAAD,CAAQC,QAAQ,YAAYO,MAAOiF,EAAavF,QAAS0F,EAAzD,2BCOOE,EAlDA,WACb,IACMC,EAAQ,QAEd,EAA4BlH,mBAHX,YAGjB,mBAAOmG,EAAP,KAAegB,EAAf,KACA,EAAsDnH,mBAAS,CAC7D0C,YAAa,GACbrD,iBAAkB,GAClBoD,KAAM,GACNhD,SAAU,KAJZ,mBAAO2H,EAAP,KAA4BC,EAA5B,KAMQ3H,EAAO4H,cAAP5H,GAmBR,OAjBA2E,qBAAU,WACR,IAAMkD,EAAM,uCAAG,sBAAAzB,EAAA,sEACPR,EAAmB5F,GACxBuG,MAAK,SAAAC,GACiB,MAAlBA,EAAOC,SACRkB,EAAuBnB,EAAOG,MAC9Bc,EAAUD,OAGbZ,OAAM,SAAA7B,GACLC,QAAQC,IAAIF,EAAM8B,aATP,2CAAH,qDAYZgB,MACC,CAAC7H,IAIF,eAACgB,EAAA,EAAD,CAAMC,WAAS,EAACsD,QAAS,EAAzB,UA5Bc,YA6BXkC,GAAsB,cAACzF,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIE,MAAM,SAASY,MAAO,CAACC,UAAW,QAArD,SACrB,wDAGDuE,IAAWe,GAAS,eAACxG,EAAA,EAAD,CAAME,MAAI,EAAC4G,UAAQ,EAAC3G,GAAI,GAAIE,MAAM,SAAlC,UACrB,cAACL,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAf,SACE,yDAEF,eAACH,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIE,MAAM,SAAzB,0BAAgDqG,EAAoB1E,eACpE,eAAChC,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIE,MAAM,SAAzB,4BAAkDqG,EAAoB3E,QACtE,eAAC/B,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIE,MAAM,SAAzB,yBAA+CqG,EAAoB3H,eAGlE0G,IAAWe,GAAS,cAAC,EAAD,CAAmB7H,iBAAkB+H,EAAoB/H,iBAAkBE,OAAO,QClB9FkI,G,OAxBH,WAEV,OACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,cAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,gBAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,aAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,cAAZ,SACE,cAAC,EAAD,MAEF,eAAC,IAAD,CAAOA,KAAK,IAAZ,UACE,8EACA,0F,QCtBRC,IAASC,OACP,cAAC,IAAD,UACE,cAAC,EAAD,MACapG,SAASgD,eAAe,W","file":"static/js/main.484a9ec9.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport { Grid, TextField, Button, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper } from \"@mui/material\";\r\n\r\n\r\nconst PrescriptionTable = ({ prescriptionList, setPrescriptionList, print, validity }) => {\r\n\r\n  class Prescription {\r\n    constructor(id, medicineName, dose, timeOfConsumption) {\r\n      this.id = id;\r\n      this.medicineName = medicineName;\r\n      this.dose = dose;\r\n      this.timeOfConsumption = timeOfConsumption;\r\n      this.isVisible = true;\r\n    }\r\n  }\r\n  const [prescription, setPrescription] = useState({\r\n    medicineName: '',\r\n    dose: '',\r\n    timeOfConsumption: '',\r\n    isVisible: true,\r\n  });\r\n  const [editID, setEditID] = useState(-1);\r\n\r\n  const handleChange = (e) => {\r\n    setPrescription({...prescription, [e.target.name]: e.target.value});\r\n  }\r\n\r\n  const savePrescription = () => {\r\n    if(editID !== -1) {\r\n      prescriptionList[editID].medicineName = prescription.medicineName;\r\n      prescriptionList[editID].dose = prescription.dose;\r\n      prescriptionList[editID].timeOfConsumption = prescription.timeOfConsumption;\r\n      setEditID(-1);\r\n    }\r\n    else {\r\n      const newPrescription = new Prescription();\r\n      newPrescription.medicineName = prescription.medicineName;\r\n      newPrescription.dose = prescription.dose\r\n      newPrescription.timeOfConsumption = prescription.timeOfConsumption;\r\n      newPrescription.id = prescriptionList.length;\r\n      newPrescription.isVisible = true;\r\n      setPrescriptionList([...prescriptionList, newPrescription]);\r\n      document.getElementsByName(\"medicineName\")[0].focus();\r\n    }\r\n    setPrescription({\r\n      medicineName: '',\r\n      dose: '',\r\n      timeOfConsumption: '',\r\n      isVisible: true,\r\n    });\r\n  }\r\n\r\n  const editPrescription = (id) => {\r\n    const toEdit = prescriptionList[id];\r\n    setPrescription(toEdit);\r\n    setEditID(id);\r\n  }\r\n\r\n\r\n  return (\r\n    <Grid container>\r\n        {!print && <Grid item xs={12} md={3} align=\"center\">\r\n          <TextField label=\"Medicine Name\" name=\"medicineName\" value={prescription.medicineName} onChange={handleChange} />\r\n        </Grid>}\r\n        {!print && <Grid item xs={12} md={3} align=\"center\">\r\n          <TextField label=\"Dose\" name=\"dose\" value={prescription.dose} onChange={handleChange} />\r\n        </Grid>}\r\n        {!print && <Grid item xs={12} md={3} align=\"center\">\r\n          <TextField label=\"Time of Consumption\" name=\"timeOfConsumption\" value={prescription.timeOfConsumption} onChange={handleChange} />\r\n        </Grid>}\r\n        {!print && <Grid item xs={12} md={3} align=\"center\">\r\n          <Button variant=\"contained\" onClick={savePrescription}>{editID === -1 ? \"Add\" : \"Save\"}</Button>\r\n        </Grid>}\r\n      <Grid item xs={12} align=\"center\" style={{marginTop: '20px'}}>\r\n        <Grid item xs={10} align=\"center\">\r\n        <TableContainer component={Paper}>\r\n            <Table>\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell align=\"center\">Sr. No.</TableCell>\r\n                  <TableCell align=\"center\">Medicine Name</TableCell>\r\n                  <TableCell align=\"center\">Dose</TableCell>\r\n                  <TableCell align=\"center\">Time of Consumption</TableCell>\r\n                  {!print && <TableCell align=\"center\">Edit</TableCell>}\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {prescriptionList.map(prescription => (\r\n                  <TableRow key={prescription.id}>\r\n                    <TableCell align=\"center\">{prescription.id+1}</TableCell>\r\n                    <TableCell align=\"center\">{prescription.medicineName}</TableCell>\r\n                    <TableCell align=\"center\">{prescription.dose}</TableCell>\r\n                    <TableCell align=\"center\">{prescription.timeOfConsumption}</TableCell>\r\n                    {!print && <TableCell align=\"center\"><Button onClick={() => editPrescription(prescription.id)}>Edit</Button></TableCell>}\r\n                  </TableRow>\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default PrescriptionTable;","import React from 'react';\r\nimport { Grid, TextField } from '@mui/material';\r\n\r\n\r\nconst Header = ({ date, patientName, setPatientName, validity, setValidity }) => {\r\n  const MONTHS = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\r\n\r\n  return (\r\n    <Grid container>\r\n      <Grid item xs={12} style={{paddingLeft: '15%', paddingTop: '2%'}}>\r\n        <p>Date: {date.getDate()} {MONTHS[date.getMonth()]} {date.getFullYear()}</p>\r\n      </Grid>\r\n      <Grid item xs={12} md={6} style={{marginTop: '30px', paddingLeft: '15%'}}>\r\n        <TextField name=\"patientName\" label=\"Patient Name\" value={patientName} onChange={(e) => setPatientName(e.target.value)}/>\r\n      </Grid>\r\n      <Grid item xs={12} md={6} style={{marginTop: '45px',}}>\r\n        Valid upto: \r\n        <input type='date' style={{marginLeft: '10px'}} value={validity} onChange={(e) => setValidity(e.target.value)}/>\r\n      </Grid>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default Header;","import React, { useState } from 'react';\r\nimport { Grid, TextField, Button } from '@mui/material';\r\n\r\nconst Footer = ({ prescriberEmail, setPrescriberEmail, prescriberPassword, setPrescriberPassword, OTP, setOTP, getOTP, checkOTP, OTPVerified, printPrescription }) => {\r\n  const [showOTPField, setShowOTPField] = useState(false);\r\n  \r\n  return (\r\n    <Grid container spacing={2}>\r\n      <Grid item xs={12} align=\"center\">\r\n        <TextField name=\"email\" label=\"Prescriber Email\" type=\"email\" value={prescriberEmail} onChange={(e) => setPrescriberEmail(e.target.value)}/>\r\n      </Grid>\r\n      <Grid item xs={12} align=\"center\">\r\n        <TextField name=\"password\" label=\"Prescriber Password\" type=\"password\" value={prescriberPassword} onChange={(e) => setPrescriberPassword(e.target.value)}/>\r\n      </Grid>\r\n      <Grid item xs={12} align='center'>\r\n        <Button onClick={() => { getOTP(); setShowOTPField(true)}}>Get OTP</Button>\r\n      </Grid>\r\n      {showOTPField && <Grid item xs={12} align='center' style={{marginBottom: '10px',}}>\r\n        <TextField name=\"otp\" label=\"OTP\" value={OTP} onChange={(e) => setOTP(e.target.value)}/>\r\n      </Grid>}\r\n      {showOTPField && <Grid item xs={12} align='center' style={{marginBottom: '10px',}}>\r\n        <Button onClick={checkOTP}>Check</Button>\r\n      </Grid>}\r\n      {OTPVerified && <Grid item xs={12} align='center'>\r\n        <Button onClick={printPrescription}>Print</Button>\r\n      </Grid>}\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default Footer;","import React, { useEffect } from 'react';\r\nimport qrcode from 'qrcode';\r\nimport { Grid, Button } from '@mui/material';\r\nimport PrescriptionTable from '../Prescription/Table';\r\nimport './print.css';\r\n\r\nconst Print = ({ id, date, patientName, prescriberName, prescriptionList }) => {\r\n  useEffect(() => {\r\n    qrcode.toCanvas(document.getElementById('qrcode'), `https://shrutikmali.github.io/prescription-verification/verify/${id}`, function(error) {\r\n      if(error) {\r\n        console.log(error);\r\n      }\r\n    });\r\n  }, [id]);\r\n\r\n\r\n  return (\r\n    <Grid container spacing={2}>\r\n      <Grid item xs={12} md={6} align='left' style={{paddingLeft: '10%', paddingTop: '50px'}}>\r\n        Date: {date.toString()}<br /><br />\r\n        Patient Name: {patientName}<br />\r\n        Prescriber Name: {prescriberName}\r\n      </Grid>\r\n      <Grid item xs={12} md={6} align='right' style={{paddingRight: '5%', paddingTop: '50px'}}>\r\n        <canvas id='qrcode'></canvas>\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n      </Grid>\r\n      <Grid item xs={12} align='center'>\r\n        <PrescriptionTable prescriptionList={prescriptionList} print={true}/>\r\n      </Grid>\r\n      <Grid item xs={12} align='center' className='printBtn' >\r\n        <Button variant='contained' onClick={() => window.print()}>Print</Button>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default Print;","import axios from 'axios';\r\n\r\nconst URL = `https://obscure-bastion-83307.herokuapp.com`;\r\n\r\nexport const checkPrescriberKey = (prescriberKey) => axios.post(`${URL}/check`, {prescriberKey});\r\nexport const createPrescription = (prescriberKey) => axios.post(`${URL}/create`, {prescriberKey});\r\nexport const signIn = (credentials) => axios.post(`${URL}/signin`, credentials);\r\nexport const signUp = (credentials) => axios.post(`${URL}/signup`, credentials);\r\nexport const getOTP = (email, password) => axios.post(`${URL}/getotp`, {email: email, password: password});\r\nexport const verifyOTP = (email, otp) => axios.post(`${URL}/verifyotp`, {email: email, otp: otp});\r\nexport const savePrescription = (date, patientName, prescriberEmail, prescriptionList, validity) => axios.post(`${URL}/saveprescription`, {date: date, patientName: patientName, prescriberEmail: prescriberEmail, prescriptionList: prescriptionList, validity: validity})\r\nexport const verifyPrescription = (id) => axios.post(`${URL}/verifyprescription`, {id});","import React, { useState } from 'react';\r\nimport PrescriptionTable from './Table';\r\nimport Header from '../Header';\r\nimport Footer from './Footer';\r\nimport Print from '../Print/Print';\r\nimport { getOTP as OTPRequest, verifyOTP, savePrescription as save } from '../api/api';\r\n\r\nconst Prescription = () => {\r\n\r\n  const [date, ] = useState(new Date());\r\n  const [patientName, setPatientName] = useState(\"\");\r\n  const [prescriptionList, setPrescriptionList] = useState([]);\r\n  const [prescriberEmail, setPrescriberEmail] = useState(\"\");\r\n  const [prescriberName, setPrescriberName] = useState(\"\");\r\n  const [prescriberPassword, setPrescriberPassword] = useState(\"\");\r\n  const [validity, setValidity] = useState(\"\");\r\n  const [OTP, setOTP] = useState(\"\");\r\n  const [OTPVerified, setOTPVerified] = useState(false);\r\n  const [prescriptionID, setPrescriptionID] = useState('');\r\n  const [showPrint, setShowPrint] = useState(false);\r\n\r\n  const getOTP = async () => {\r\n    await OTPRequest(prescriberEmail, prescriberPassword)\r\n    .then(result => {\r\n      if(result.status === 200) {\r\n        alert(\"OTP sent to registered email\");\r\n        setPrescriberName(result.data.prescriberName);\r\n      }\r\n      else {\r\n        alert(\"Some error occurred\");\r\n      }\r\n    })\r\n    .catch(error => {\r\n      console.log(error.response.status);\r\n    });\r\n  }\r\n\r\n  const checkOTP = async () => {\r\n    await verifyOTP(prescriberEmail, OTP)\r\n    .then(result => {\r\n      if(result.status === 200) {\r\n        setOTPVerified(true);\r\n        setPrescriberName(result.data.name);\r\n        alert(\"OTP Verified!\");\r\n      }\r\n    })\r\n    .catch(error => {\r\n      if(error.response.status === 409) {\r\n        alert(\"Invalid OTP, try again\");\r\n      }\r\n    });\r\n  }\r\n\r\n  const printPrescription = async () => {\r\n    await save(date, patientName, prescriberEmail, prescriptionList, validity)\r\n    .then(result => {\r\n      console.log(result);\r\n      setPrescriptionID(result.data.id);\r\n      setShowPrint(true);\r\n    })\r\n    .catch(error => {\r\n      console.log(error.response);\r\n    })\r\n  }\r\n\r\n\r\n  return <>\r\n    {!showPrint && <div><Header date={date} patientName={patientName} setPatientName={setPatientName} validity={validity} setValidity={setValidity} />\r\n    <br />\r\n    <br />\r\n    <PrescriptionTable prescriptionList={prescriptionList} setPrescriptionList={setPrescriptionList} />\r\n    <br />\r\n    <br />\r\n    <br />\r\n    <Footer\r\n    prescriberEmail={prescriberEmail}\r\n    setPrescriberEmail={setPrescriberEmail} \r\n    prescriberPassword={prescriberPassword} \r\n    setPrescriberPassword={setPrescriberPassword} \r\n    OTP={OTP} \r\n    setOTP={setOTP} \r\n    getOTP={getOTP} \r\n    checkOTP={checkOTP} \r\n    OTPVerified={OTPVerified} \r\n    printPrescription={printPrescription} /></div>}\r\n    {showPrint && \r\n    <Print \r\n    id={prescriptionID} \r\n    date={date} \r\n    patientName={patientName} \r\n    prescriberName={prescriberName} \r\n    prescriptionList={prescriptionList} />}\r\n  </>\r\n}\r\n\r\nexport default Prescription;","import React, { useState } from 'react';\r\nimport { Grid, Button, TextField } from '@mui/material';\r\nimport { signUp } from '../api/api';\r\n\r\nconst inputStyle = {\r\n  marginTop: '15px',\r\n  width: '250px',\r\n};\r\n\r\nconst buttonStyle = {\r\n  marginTop: '15px',\r\n}\r\n\r\nconst Prescriber = () => {\r\n  const [credentials, setCredentials] = useState({\r\n    name: '',\r\n    email: '',\r\n    password: '',\r\n  });\r\n\r\n  const handleChange = (e) => {\r\n    setCredentials({...credentials, [e.target.name]: e.target.value});\r\n  }\r\n  const authenticate = async () => {\r\n    console.log(credentials);\r\n    await signUp(credentials)\r\n    .then(result =>{\r\n      if(result.status === 200) {\r\n        alert(\"Account created, navigate to /prescription\");\r\n      }\r\n    })\r\n    .catch(error => console.log(error.response));\r\n  }\r\n\r\n  return (\r\n    <Grid container>\r\n      <Grid item xs={12} align='center' style={{margin: '20px 0px'}}>\r\n        <p>Sign Up</p>\r\n      </Grid>\r\n      <Grid item xs={12} align='center'>\r\n        <TextField variant='filled' name='name' label='Name' style={inputStyle} value={credentials.name} onChange={handleChange} />\r\n      </Grid>\r\n      <Grid item xs={12} align='center'>\r\n        <TextField variant='filled' name='email' label='Email' style={inputStyle} value={credentials.email} onChange={handleChange} />\r\n      </Grid>\r\n      <Grid item xs={12} align='center'>\r\n        <TextField variant='filled' name='password' value={credentials.password} label='Password' type='password' style={inputStyle} onChange={handleChange}/>\r\n      </Grid>\r\n      <Grid item xs={12} align='center'>\r\n        <Button variant='contained' style={buttonStyle} onClick={authenticate}>Sign Up</Button>\r\n      </Grid>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default Prescriber;","import React, { useState, useEffect } from 'react';\r\nimport { Grid } from '@mui/material';\r\nimport PrescriptionTable from '../Prescription/Table';\r\nimport { useParams } from 'react-router-dom';\r\nimport { verifyPrescription } from '../api/api';\r\n\r\nconst Verify = () => {\r\n  const CHECKING = 'checking';\r\n  const VALID = 'valid';\r\n  const INVALID = 'invalid';\r\n  const [status, setStatus] = useState(CHECKING);\r\n  const [prescriptionDetails, setPrescriptionDetails] = useState({\r\n    patientName: '',\r\n    prescriptionList: [],\r\n    date: '',\r\n    validity: '',\r\n  });\r\n  const { id } = useParams();\r\n\r\n  useEffect(() => {\r\n    const verify = async () => {\r\n      await verifyPrescription(id)\r\n      .then(result => {\r\n        if(result.status === 200) {\r\n          setPrescriptionDetails(result.data);\r\n          setStatus(VALID);\r\n        }\r\n      })\r\n      .catch(error => {\r\n        console.log(error.response);\r\n      });\r\n    }\r\n    verify();\r\n  }, [id]);\r\n\r\n\r\n  return (\r\n    <Grid container spacing={2}>\r\n      {status === INVALID && <Grid item xs={12} align='center' style={{marginTop: '20px'}}>\r\n        <h3>Invalid prescription</h3>\r\n      </Grid>}\r\n\r\n      {status === VALID && <Grid item contains xs={12} align='center'>\r\n      <Grid item xs={12}>\r\n        <h3>Prescription Verified</h3>\r\n      </Grid>\r\n      <Grid item xs={12} align='center'>Patient Name {prescriptionDetails.patientName}</Grid>\r\n      <Grid item xs={12} align='center'>Prescribed on: {prescriptionDetails.date}</Grid>\r\n      <Grid item xs={12} align='center'>Valid upto: {prescriptionDetails.validity}</Grid>\r\n      </Grid>\r\n      }\r\n      {status === VALID && <PrescriptionTable prescriptionList={prescriptionDetails.prescriptionList} print={true} />}\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default Verify;","import React from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport Prescription from './Prescription/Prescription';\r\nimport Prescriber from './Prescriber/Prescriber';\r\nimport Print from './Print/Print';\r\nimport Verify from './Verify/Verify';\r\nimport './index.css';\r\n\r\n\r\nconst App = () => {\r\n\r\n  return (\r\n    <Switch>\r\n      <Route path='/prescriber'>\r\n        <Prescriber />\r\n      </Route>\r\n      <Route path='/prescription'>\r\n        <Prescription />\r\n      </Route>\r\n      <Route path='/print/:id'>\r\n        <Print />\r\n      </Route>\r\n      <Route path='/verify/:id'>\r\n        <Verify />\r\n      </Route>\r\n      <Route path='/'>\r\n        <h3>Navigate to /prescriber to create an account</h3>\r\n        <h3>Navigate to /prescription to create prescription</h3>\r\n      </Route>\r\n    </Switch>\r\n  );\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport { HashRouter } from 'react-router-dom'\r\n\r\nReactDOM.render(\r\n  <HashRouter>\r\n    <App />\r\n  </HashRouter>, document.getElementById('root'));"],"sourceRoot":""}